name: Docker Compose Actions Workflow
on:
  push:
    paths:
    - "grai-server/**"

env:
  pyver: "3.10"

jobs:
  lint-grai-server:
    runs-on: ubuntu-latest
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: "${{ env.pyver }}"
        
    - name: Install Python dependencies
      run:  pip install black
    
    - name: Run linters
      uses: wearerequired/lint-action@v1
      with:
        black: true
        black_dir: "grai-server/app"
        auto_fix: true
        github_token: ${{ secrets.GITHUB_TOKEN }}
        git_email: ian@grai.io

    - name: Install Poetry
      uses: abatilo/actions-poetry@v2.0.0
      with:
        cache: poetry
      
    - name: Run isort
      working-directory: "grai-server/app"
      run: poetry run isort . -c

  test-grai-server:
    needs: lint-grai-server
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Build the stack
      working-directory: "grai-server"
      run: docker compose up -d

    - uses: actions/setup-python@v4
      with:
        python-version: "${{ env.pyver }}"

    - name: Install Poetry
      uses: abatilo/actions-poetry@v2.0.0
      with:
        cache: poetry

    - name: Test
      working-directory: "grai-server/app"
      run: poetry run pytest pytest


